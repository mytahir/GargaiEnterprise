<Window x:Class="AMD.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:mdixWindow="clr-namespace:AMD"
        xmlns:mdix="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:local="clr-namespace:AMD"
        mc:Ignorable="d"
        Style="{StaticResource MaterialDesignWindow}"
        Background="{DynamicResource MaterialDesignPaper}"
        TextElement.Foreground="{StaticResource MaterialDesignBody}"
        mdixWindow:WindowEx.ShowMinimizeButton="True"
        mdixWindow:WindowEx.ShowMaximizeButton="True"
        Title="AMD Enterprise" Height="650" Width="1000"
        WindowStartupLocation="CenterScreen"
        AutomationProperties.Name="{Binding Title, RelativeSource={RelativeSource Self}}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"
        FontFamily="{materialDesign:MaterialDesignFont}">

    <!--You only need to specify header content if you want to put some custom stuff in the color zone at the top. Otherwise just set Title.-->
    <mdixWindow:MaterialDesignWindow.HeaderContent>
        <Grid>
            <!--<ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}" HorizontalAlignment="Left" WindowChrome.IsHitTestVisibleInChrome="True" 
                          x:Name="MenuToggleButton" />-->
            <TextBlock Text="{Binding Title, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" HorizontalAlignment="Left" FontSize="20" Margin="30 0 0 0" VerticalAlignment="Center"/>
        </Grid>

    </mdixWindow:MaterialDesignWindow.HeaderContent>
    <Window.Content>
        <!--<mdix:DrawerHost IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}">
            <mdix:DrawerHost.LeftDrawerContent>
                <TextBlock Width="250" TextWrapping="Wrap" Text="Some left drawer content here. Perhaps navigation options?" 
                           VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10"/>
            </mdix:DrawerHost.LeftDrawerContent>-->
        <Grid x:Name="RootGrid">
            <Grid.Resources>
                <Style BasedOn="{StaticResource {x:Type Frame}}" TargetType="{x:Type Frame}">
                    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent4}" />
                    <Setter Property="ClipToBounds" Value="True" />
                    <Setter Property="ContentTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <mah:TransitioningContentControl Content="{Binding}"
                                                             RestartTransitionOnContentChange="True"
                                                             Transition="Custom">
                                    <mah:TransitioningContentControl.CustomVisualStates>
                                        <VisualState x:Name="CustomTransition">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                           Storyboard.TargetName="CurrentContentPresentationSite"
                                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00.150" Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                           Storyboard.TargetName="CurrentContentPresentationSite"
                                                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="200" />
                                                    <SplineDoubleKeyFrame KeySpline="0.1, 0.9, 0.2, 1"
                                                                      KeyTime="00:00:00.300"
                                                                      Value="0" />
                                                </DoubleAnimationUsingKeyFrames>

                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                           Storyboard.TargetName="PreviousContentPresentationSite"
                                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </mah:TransitioningContentControl.CustomVisualStates>
                                </mah:TransitioningContentControl>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Grid.Resources>
            <materialDesign:Snackbar MessageQueue="{materialDesign:MessageQueue}" x:Name="MainSnackbar"
                                            />
        </Grid>
        <!--</mdix:DrawerHost>-->
    </Window.Content>
</Window>
